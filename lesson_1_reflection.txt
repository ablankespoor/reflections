How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could see the lines where changes were made.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could see what and when changes were made, and maybe
    comments that would indicate why they were made.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: allows for a complete change to be committed
    Pros: allows multiple files to be committed at once
    Cons: changes may be lost if system crashes

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is a repository system and saves on a file by file basis, and it makes
    saving changes to a feature that might span multiple files possible.  
    The other programs are file editing and work at the file level.

How can you use the commands git log and git diff to view the history of files?

    You can use log to look at short descriptions of the committs.  Then
    the diff command can be used to see what differences there are.

How might using version control make you more confident to make changes that
could break something?

    I can make changes and if something breaks I can go back to a previous
    commit.

Now that you have your workspace set up, what do you want to try using Git for?


    I would like to use Git to for the work that I do with Arduino, Android,
    and maybe the Electric Imp
